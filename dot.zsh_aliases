alias aptup='sudo aptitude update && sudo aptitude safe-upgrade'
alias git-root='cd $(git rev-parse --show-toplevel)'
case "$OSTYPE" in
    darwin*)
        [[ -x "/usr/local/bin/gdircolors" ]] && \
            eval $(/usr/local/bin/gdircolors)
        if [[ -x "/usr/local/bin/gls" ]]; then
            alias ls='gls --color=auto'
        else
            alias ls='ls -G'
        fi
        alias pgrep='pgrep -f -l -i'
        ;;
    freebsd*)
        if [[ -x "/usr/local/bin/gnuls" ]]; then
            alias ls='gnuls --color=auto'
        else
            alias ls='ls -G'
        fi
        alias pgrep='pgrep -f -l -i'
        ;;
    *)
        alias ls='ls --color=auto'
        alias pgrep='pgrep -f -l'
esac
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias rgrep='rgrep --color=auto'
alias week='date +%V'
alias zrehash='source ~/.zshrc'
alias autossh='autossh -M 0 -o "ServerAliveInterval 10"'
alias svn-diff='svn diff | colordiff -u'
ssh-rm-host-key () {
    if [[ "$1" =~ ^[0-9]+$ ]]; then
        case "$OSTYPE" in
            darwin* | freebsd*)
                sed -i '' -e "${1}d" ~/.ssh/known_hosts
                ;;
            *)
                sed -i'' -e "${1}d" ~/.ssh/known_hosts
        esac
    else
        echo "usage: $0 line-number"
    fi
}

function watch-do-sh () {
    if [[ -z "$1" || -z "$2" ]]; then
        echo "usage: $0 <path> <command>"
        return
    fi
    FILE="$1"
    shift
    while inotifywait -q -e close_write,moved_to,create -r $FILE; do
        "$@"
    done
}
